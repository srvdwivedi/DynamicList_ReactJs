{"version":3,"sources":["Components/Form.js","Components/table.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","useState","enteredName","setEnteredName","enteredEmail","setEnteredEmail","enteredNumber","setEnteredNumber","className","onSubmit","event","preventDefault","data","name","email","number","onSubmitData","type","value","onChange","target","placeholder","required","Table","item","map","DUMMY_DATA","Home","setNewData","userData","prevData","id","filter","tr","td","i","document","getElementById","toUpperCase","getElementsByTagName","length","textContent","innerText","indexOf","style","display","scope","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e440d1a8.chunk.js","sourcesContent":["import {React,useState} from 'react';\nimport './Form.css';\n\nfunction Form(props) {\n\n    const [enteredName,setEnteredName] = useState('');\n    const [enteredEmail,setEnteredEmail] = useState('');\n    const [enteredNumber,setEnteredNumber] = useState('');\n\n    const nameChangeHandler = (event) => {\n        setEnteredName(event.target.value); \n    }\n\n    const emailChangeHandler = (event) => {\n        setEnteredEmail(event.target.value); \n    }\n\n    const numberChangeHandler = (event) => {\n        setEnteredNumber(event.target.value); \n    }\n\n    function submitHandler(event) {\n        event.preventDefault();\n\n        const data = {\n            name : enteredName,\n            email : enteredEmail,\n            number : enteredNumber,\n        };\n\n        props.onSubmitData(data);\n        setEnteredName('');\n        setEnteredEmail('');\n        setEnteredNumber('');\n    }\n\n    return (\n        <div className=\"form-group col-md-6 border\"> \n        <h2> Fill User Detail :  </h2>\n            <form className=\"\" onSubmit = {submitHandler}>\n                <div className=\"\">\n                    <div className = \"p-2\">\n                        <input className=\"form-control\" type=\"text\" value={enteredName} onChange = {nameChangeHandler} placeholder=\"Enter Name\" required ></input>\n                    </div>\n\n                    <div className = \"p-2\">\n                        <input className=\"form-control\" type=\"email\" value={enteredNumber} onChange = {numberChangeHandler} placeholder=\"Enter Email\" required ></input>\n                    </div> \n\n                    <div className = \"p-2\">\n                        <input type=\"text\" className=\"form-control\" value={enteredEmail} onChange = {emailChangeHandler} placeholder=\"Enter Number\" required></input>\n                    </div>  \n                </div>\n                <div className = \"p-2\">\n                    <button type=\"submit\" className=\"btn btn-primary\" > Add User </button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport default Form;","import React, {useMemo} from 'react';\n\n\nfunction Table(props){\n    return(\n        <>\n        {props.item.map(data => <tr>\n            <td> {data.name}</td>\n            <td>{data.email}</td>\n            <td>{data.number}</td>\n        </tr> )}\n        </>\n    );\n} \n\nexport default Table;\n\n","import React, {useState} from \"react\";\nimport \"./Home.css\";\nimport Form from \"./Form\";\nimport Table from './table';\n\nconst DUMMY_DATA = [];\nconst Home = () => {\n    const [data, setNewData] = useState(DUMMY_DATA);\n    const formDataHandler = userData => {\n        setNewData((prevData) => {\n            return [userData, ...prevData];\n        });\n    };\n\n    function myFunction() {\n        var input, filter, table, tr, td, i, txtValue;\n        input = document.getElementById(\"myInput\");\n        filter = input.value.toUpperCase();\n        table = document.getElementById(\"myTable\");\n        tr = table.getElementsByTagName(\"tr\");\n        for (i = 0; i < tr.length; i++) {\n          td = tr[i].getElementsByTagName(\"td\")[0];\n          if (td) {\n            txtValue = td.textContent || td.innerText;\n            if (txtValue.toUpperCase().indexOf(filter) > -1) {\n              tr[i].style.display = \"\";\n            } else {\n              tr[i].style.display = \"none\";\n            }\n          }       \n        }\n      }\n\n    return(\n        <div className=\"container\">\n        <Form onSubmitData = {formDataHandler} />\n        <h2>List Of Users : </h2>\n        <input className=\"form-group\" type=\"text\" id=\"myInput\" onChange= {myFunction} placeholder=\"Search for names...\"></input>\n\n        <table className=\"table table-striped\" id=\"myTable\">\n            <thead className=\"thead-dark\">\n                <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Number</th>\n                </tr>\n            </thead>\n            <tbody>\n                <Table item = {data} />\n            </tbody>\n        </table>\n        </div>\n    )\n}\n\nexport default Home;\n","import './App.css';\nimport Home from './Components/Home';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <Home> </Home>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}